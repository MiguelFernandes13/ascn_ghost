---
  - name: Create a pod for SQL Server
    kubernetes.core.k8s:
      state: present
      namespace: default
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: mysql-deployment
          labels:
            app: mysql
            tier: database
        spec:
          selector:
            matchLabels:
              app: mysql
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                app: mysql
                tier: database
            spec:
              containers:
              - name: mysql
                image: mysql:latest
                env: # The variables below could be set on a ConfigMap object
                - name: MYSQL_ALLOW_EMPTY_PASSWORD
                  value: "true"
                - name: MYSQL_DATABASE
                  value: "{{ MYSQL_DATABASE }}"
                - name: MYSQL_USER
                  value: "{{ MYSQL_USER }}"
                - name: MYSQL_PASSWORD
                  value: "{{ MYSQL_PASSWORD }}"
                ports:
                - containerPort: 3306
                volumeMounts:
                - name: mysql-persistent-storage
                  mountPath: /var/lib/mysql
              volumes:
              - name: mysql-persistent-storage
                persistentVolumeClaim:
                  claimName: mysql-pv-claim

  - name: Create a storage class for SQL Server
    kubernetes.core.k8s:
      state: present
      namespace: default
      definition:
        apiVersion: storage.k8s.io/v1
        kind: StorageClass
        metadata:
          name: mysql-pv-storage
          labels:
            app: mysql
            tier: database
        provisioner: pd.csi.storage.gke.io
        volumeBindingMode: WaitForFirstConsumer
        allowVolumeExpansion: true
        parameters:
          type: pd-balanced

  - name: Create a persistent volume claim for SQL Server
    kubernetes.core.k8s:
      state: present
      namespace: default
      definition:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: mysql-pv-claim
          labels:
            app: mysql
            tier: database
        spec:
          accessModes:
            - ReadWriteOnce
          storageClassName: mysql-pv-storage
          resources:
            requests:
              storage: 10Gi

  - name: Create a service for SQL Server
    kubernetes.core.k8s:
      state: present
      namespace: default
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ MYSQL_HOST }}" # logical name of the service, which will also become the DNS name of the service when it is created.
          labels:
            app: mysql
            tier: database
        spec:
          type: ClusterIP
          selector:
            app: mysql
          ports:
            - targetPort: 3306 # port that containers are listening on
              port: 3306 # port number exposed internally in the cluster